{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["app","Realm","id","App","React","useState","currentUser","setUser","useEffect","loginAnonymous","a","console","log","logIn","anonymous","user","functions","winners","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8hBAAe,MAA0B,iC,yBCMnCA,EAAM,IAAIC,IAAU,CAAEC,GADP,sBAqCNC,MAlCf,WACE,MAAwBC,IAAMC,SAASL,EAAIM,aAA3C,mBAAaC,GAAb,WACA,EAA4BH,IAAMC,SAAS,IAA3C,mBAYA,OAZA,UAEAG,qBAAU,WACR,IAAMC,EAAc,uCAAG,4BAAAC,EAAA,6DACrBC,QAAQC,IAAI,eADS,SAEFZ,EAAIa,MAAMZ,IAAkBa,aAF1B,cAEfC,EAFe,OAGrBR,EAAQQ,GAHa,KAIrBJ,QAJqB,SAIHI,EAAKC,UAAUC,UAJZ,wBAIbL,IAJa,4DAAH,qDAMpBH,MACC,IAGD,qBAAKS,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,uCCjBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f15d768f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport * as Realm from \"realm-web\";\nconst REALM_APP_ID = \"leaderboard-anwug\";\nconst app = new Realm.App({ id: REALM_APP_ID });\n\nfunction App() {\n  const [user, setUser] = React.useState(app.currentUser);\n  const [scores, setScores] = React.useState([]);\n\n  useEffect(() => {\n    const loginAnonymous = async () => {\n      console.log(\"Logging in.\")\n      const user = await app.logIn(Realm.Credentials.anonymous());\n      setUser(user);\n      console.log(await user.functions.winners());\n    }\n    loginAnonymous();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React, Maybe?\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}